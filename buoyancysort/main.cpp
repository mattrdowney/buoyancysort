#include "stdafx.h"
#include <algorithm>
#include <functional>
#include <iostream>
#include <map>
#include <math.h>
#include <random>
#include <set>
#include <utility>
#include "bubble-sort.h"
#include "buoyancysort.h"
#include "comb-sort.h"
#include "heap-tests.h"
#include "hoare-partition.h"
#include "hybrid-hierarchysort.h"
#include "in-place-hierarchysort.h"
#include "insertion-sort.h"
#include "int-that-tracks-comparisons.h"
#include "interlaced-double-binary-heap.h"
#include "interlaced-entangled-double-binary-heap.h"
#include "max-heap.h"
#include "median-of-medians.h"
#include "min-heap.h"
#include "ordered-max-heap.h"
#include "ordered-min-heap.h"
#include "out-of-place-hierarchysort.h"
#include "print.h"
#include "quicksort.h"
#include "reverse.h"
#include "semi-stable-partition.h"
#include "shell-sort.h"
#include "sift.h"
#include "sorted.h"
#include "spindle.h"
#include "stable-partition.h"

//typedef int current_type;
typedef IntThatTracksComparisons::IntThatTracksComparisons current_type;

int main()
{
	//HeapTests::heap_tests();
	const long size = 1000000;
	const long tuple_size = 2;
	std::vector<current_type> data(size);
	for (std::size_t i = 0; i < size; i += 1)
	{
		/*if ((i % 2) == 0)
		{
			data[i] = size/2;
			continue;
		}*/
		data[i] = size - i;
	}
	
	std::random_device random_device;
	std::mt19937 random_number_generator(random_device());
	random_number_generator.seed(26);
	std::shuffle(&data[0], (&data[size-1]) + 1, random_number_generator);
	
	//Print::print((current_type*)data.data(), -1, size);
	
	//HeapTests::test_min_heap<current_type>((current_type*)data.data(), -1, size, tuple_size);
	//HeapTests::test_max_heap<current_type>((current_type*)data.data(), -1, size, tuple_size);
	//HeapTests::test_min_heap_alignment<current_type>((current_type*)data.data(), -1, size, tuple_size);
	//HeapTests::test_max_heap_alignment<current_type>((current_type*)data.data(), -1, size, tuple_size);

	//IntThatTracksComparisons::reset_comparisons();

	//Hierarchysort::in_place<current_type>((current_type*)data.data(), -1, size);
	std::vector<long> gap_sequence1 = ShellSort::extrapolated_ciura_tokuda1;
	//std::vector<long> gap_sequence2 = ShellSort::gap_sequence_generator(ShellSort::generalized_ciura4, 25);
	std::vector<long> gap_sequence2 = ShellSort::extrapolated_ciura_tokuda2;
	//std::vector<long> gap_sequence2 = ShellSort::gap_sequence_generator(ShellSort::extrapolated_ciura, 20);
	//std::vector<long> gap_sequence2 = ShellSort::extrapolated_ciura_tokuda3;
	//ShellSort::empirical_comparison_range(gap_sequence1, gap_sequence2, 45000, 120000, 40991, 41200, 41);
	ShellSort::empirical_comparison(gap_sequence1, gap_sequence2, 2, 200, 5000);
	//ShellSort::empirical_comparison_inner_range(gap_sequence1, gap_sequence2, 60000, 100000, 41286, 41050, 41285, 5);

	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15892, 41286, 77988718 : 78057318 (68600) // ShellSort::empirical_comparison_inner_range(gap_sequence1, gap_sequence2, 45000, 120000, 15891, 15892, 15920, 41);
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15893, 41286, 89257617 : 89296820 (39203)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15894, 41286, 92964398 : 92983508 (19110)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15895, 41286, 86910027 : 87255776 (345749)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15896, 41286, 86114211 : 86177613 (63402)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15897, 41286, 85872116 : 85936051 (63935)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15898, 41286, 85395715 : 85363960 (-31755)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15899, 41286, 81989884 : 82030610 (40726)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15900, 41286, 83186957 : 83201952 (14995)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15901, 41286, 82285560 : 82314513 (28953)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15902, 41286, 83583714 : 83926676 (342962)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15903, 41286, 91582681 : 91628614 (45933)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15904, 41286, 84342661 : 84336144 (-6517)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15905, 41286, 89774498 : 89732729 (-41769)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15906, 41286, 87208859 : 87238857 (29998)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15907, 41286, 76936426 : 77044949 (108523)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15908, 41286, 89377545 : 89492337 (114792)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15909, 41286, 87366776 : 87541819 (175043)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15910, 41286, 84690788 : 84761062 (70274)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15911, 41286, 83906841 : 83936890 (30049)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15912, 41286, 84051318 : 84034005 (-17313)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15913, 41286, 87297874 : 87272867 (-25007)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15914, 41286, 83590605 : 83888964 (298359)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15915, 41286, 79941021 : 79972251 (31230)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15916, 41286, 83804579 : 83967440 (162861)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15917, 41286, 85708271 : 85698396 (-9875)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15918, 41286, 86257341 : 86286260 (28919)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15919, 41286, 88421372 : 88521429 (100057)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15920, 41286, 82217124 : 82267625 (50501)

	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15912, 41286, 1076022091:1076231431 (209340) // ShellSort::empirical_comparison_inner_range(gap_sequence1, gap_sequence2, 45000, 120000, 15891, 15912, 15913, 500);
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15913, 41286, 1048767399:1048778255 (10856)

	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15905, 41286, 1050590329:1050754131 (163802) //ShellSort::empirical_comparison_inner_range(gap_sequence1, gap_sequence2, 45000, 120000, 15891, 15905, 15905, 500);

	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41050, 8721319:8719300 (-2019) // ShellSort::empirical_comparison_inner_range(gap_sequence1, gap_sequence2, 60000, 100000, 41286, 41050, 41285, 5);
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41051, 10065261 : 10074418 (9157)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41052, 9711854 : 9705702 (-6152)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41053, 10821492 : 10823592 (2100)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41054, 11041637 : 11039666 (-1971)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41055, 10688179 : 10689843 (1664)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41056, 9755269 : 9752480 (-2789)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41057, 10791374 : 10796336 (4962)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41058, 9155558 : 9155509 (-49)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41059, 9234904 : 9217306 (-17598)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41060, 9302588 : 9305060 (2472)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41061, 10863811 : 10873126 (9315)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41062, 11255372 : 11244883 (-10489)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41063, 9906266 : 9919910 (13644)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41064, 9883402 : 9896047 (12645)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41065, 10129643 : 10132678 (3035)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41066, 9549903 : 9553879 (3976)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41067, 9530052 : 9518097 (-11955)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41068, 10547790 : 10534598 (-13192)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41069, 9111322 : 9103529 (-7793)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41070, 11177503 : 11177211 (-292)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41071, 10616992 : 10628082 (11090)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41072, 9997431 : 9981581 (-15850)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41073, 10395427 : 10394468 (-959)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41074, 9652181 : 9670813 (18632)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41075, 10299054 : 10298286 (-768)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41076, 10822020 : 10819604 (-2416)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41077, 8839177 : 8846406 (7229)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41078, 8925638 : 8939207 (13569)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41079, 8389324 : 8375171 (-14153)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41080, 9389047 : 9412855 (23808)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41081, 10031585 : 10026175 (-5410)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41082, 9530830 : 9539890 (9060)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41083, 9770170 : 9800812 (30642)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41084, 9545501 : 9555658 (10157)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41085, 11539983 : 11538712 (-1271)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41086, 10079153 : 10106713 (27560)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41087, 9707543 : 9719138 (11595)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41088, 11758864 : 11776458 (17594)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41089, 11082621 : 11060935 (-21686)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41090, 9765590 : 9754254 (-11336)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41091, 10179882 : 10179938 (56)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41092, 10530339 : 10534991 (4652)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41093, 10726149 : 10733178 (7029)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41094, 9485139 : 9515880 (30741)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41095, 10700910 : 10715606 (14696)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41096, 10985650 : 10986069 (419)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41097, 9773733 : 9765193 (-8540)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41098, 9991100 : 9975827 (-15273)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41099, 10204634 : 10224888 (20254)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41100, 9573630 : 9604903 (31273)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41101, 10311741 : 10290576 (-21165)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41102, 10760032 : 10768598 (8566)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41103, 10410284 : 10411587 (1303)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41104, 9422495 : 9425513 (3018)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41105, 9685952 : 9687253 (1301)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41106, 10400765 : 10398603 (-2162)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41107, 10408094 : 10385737 (-22357)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41108, 10104391 : 10103802 (-589)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41109, 8987849 : 8996601 (8752)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41110, 10621972 : 10623297 (1325)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41111, 9539468 : 9550552 (11084)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41112, 10316721 : 10293776 (-22945)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41113, 10403732 : 10389452 (-14280)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41114, 10562312 : 10558940 (-3372)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41115, 10538406 : 10533316 (-5090)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41116, 8983175 : 8974023 (-9152)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41117, 10133109 : 10112888 (-20221)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41118, 8917850 : 8922118 (4268)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41119, 9923745 : 9907962 (-15783)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41120, 9286881 : 9280399 (-6482)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41121, 8660246 : 8669642 (9396)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41122, 8813690 : 8815122 (1432)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41123, 10864501 : 10845871 (-18630)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41124, 10382766 : 10359697 (-23069)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41125, 10122613 : 10115568 (-7045)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41126, 9322580 : 9317537 (-5043)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41127, 11081370 : 11099456 (18086)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41128, 10978647 : 10956325 (-22322)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41129, 9293393 : 9296450 (3057)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41130, 11661088 : 11672032 (10944)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41131, 9582530 : 9579725 (-2805)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41132, 9363555 : 9354035 (-9520)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41133, 9633046 : 9636759 (3713)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41134, 9562157 : 9575901 (13744)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41135, 10483447 : 10478883 (-4564)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41136, 9012147 : 8986207 (-25940)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41137, 8274274 : 8269475 (-4799)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41138, 10687470 : 10678621 (-8849)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41139, 10078290 : 10068232 (-10058)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41140, 9494840 : 9508747 (13907)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41141, 10036005 : 10034577 (-1428)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41142, 9711319 : 9743875 (32556)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41143, 12127756 : 12120225 (-7531)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41144, 10440604 : 10441880 (1276)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41145, 10553804 : 10546660 (-7144)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41146, 11427937 : 11451193 (23256)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41147, 11397587 : 11392164 (-5423)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41148, 10430386 : 10444373 (13987)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41149, 11010294 : 11000129 (-10165)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41150, 10470997 : 10464677 (-6320)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41151, 9393343 : 9400584 (7241)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41152, 8527080 : 8542186 (15106)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41153, 10503850 : 10504440 (590)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41154, 10505546 : 10511663 (6117)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41155, 10721610 : 10722070 (460)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41156, 10693417 : 10701618 (8201)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41157, 9329345 : 9338539 (9194)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41158, 9324889 : 9306492 (-18397)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41159, 10176687 : 10182616 (5929)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41160, 9354340 : 9374752 (20412)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41161, 9634851 : 9624106 (-10745)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41162, 9195352 : 9191194 (-4158)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41163, 10532288 : 10513120 (-19168)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41164, 9211016 : 9203773 (-7243)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41165, 11452203 : 11447136 (-5067)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41166, 10650642 : 10672580 (21938)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41167, 10883847 : 10871511 (-12336)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41168, 10612045 : 10608415 (-3630)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41169, 10638388 : 10640214 (1826)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41170, 9870086 : 9863192 (-6894)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41171, 9476784 : 9454591 (-22193)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41172, 9511517 : 9505333 (-6184)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41173, 9866847 : 9845931 (-20916)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41174, 10223925 : 10244416 (20491)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41175, 9263242 : 9248894 (-14348)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41176, 8744881 : 8740346 (-4535)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41177, 10154540 : 10141716 (-12824)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41178, 10053058 : 10045795 (-7263)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41179, 9286445 : 9286509 (64)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41180, 9901731 : 9912775 (11044)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41181, 9598599 : 9573327 (-25272)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41182, 10726600 : 10751501 (24901)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41183, 10235665 : 10212951 (-22714)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41184, 10761661 : 10771920 (10259)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41185, 9736733 : 9744344 (7611)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41186, 8468851 : 8456645 (-12206)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41187, 10492687 : 10488465 (-4222)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41188, 10044708 : 10055723 (11015)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41189, 9896958 : 9909283 (12325)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41190, 11183785 : 11197030 (13245)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41191, 11022825 : 11033114 (10289)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41192, 9322915 : 9315225 (-7690)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41193, 10136245 : 10145146 (8901)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41194, 10898973 : 10914331 (15358)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41195, 10300040 : 10309813 (9773)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41196, 9344924 : 9333913 (-11011)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41197, 9094312 : 9109615 (15303)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41198, 10236576 : 10247806 (11230)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41199, 11225583 : 11256363 (30780)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41200, 9309430 : 9322503 (13073)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41201, 11917832 : 11934513 (16681)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41202, 8390709 : 8391267 (558)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41203, 9244201 : 9246548 (2347)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41204, 9615333 : 9636961 (21628)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41205, 9886554 : 9898338 (11784)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41206, 8992392 : 8986452 (-5940)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41207, 9347336 : 9337144 (-10192)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41208, 9831455 : 9830784 (-671)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41209, 10094675 : 10106468 (11793)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41210, 9469761 : 9468251 (-1510)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41211, 10337238 : 10340829 (3591)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41212, 9609452 : 9617422 (7970)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41213, 10672665 : 10677805 (5140)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41214, 10050176 : 10023079 (-27097)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41215, 10829116 : 10837678 (8562)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41216, 9024336 : 9014640 (-9696)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41217, 9663399 : 9649034 (-14365)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41218, 9600194 : 9608056 (7862)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41219, 9445736 : 9431902 (-13834)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41220, 10791101 : 10810380 (19279)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41221, 9278851 : 9269647 (-9204)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41222, 10392234 : 10394514 (2280)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41223, 10070611 : 10071911 (1300)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41224, 10500981 : 10500259 (-722)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41225, 9373390 : 9394595 (21205)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41226, 9162508 : 9163743 (1235)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41227, 9482680 : 9489898 (7218)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41228, 10005796 : 9994559 (-11237)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41229, 9998992 : 10010000 (11008)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41230, 10310579 : 10323300 (12721)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41231, 9367789 : 9370139 (2350)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41232, 10148462 : 10146389 (-2073)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41233, 9659354 : 9670758 (11404)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41234, 10390147 : 10400650 (10503)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41235, 9770969 : 9777091 (6122)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41236, 9654955 : 9663725 (8770)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41237, 9515082 : 9519952 (4870)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41238, 10712395 : 10723860 (11465)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41239, 10512033 : 10534370 (22337)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41240, 9920049 : 9940563 (20514)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41241, 10475351 : 10469743 (-5608)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41242, 9873980 : 9863509 (-10471)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41243, 10824964 : 10793638 (-31326)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41244, 10847650 : 10864859 (17209)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41245, 9233033 : 9228614 (-4419)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41246, 9153739 : 9136514 (-17225)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41247, 9506759 : 9498150 (-8609)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41248, 8818383 : 8821669 (3286)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41249, 9988118 : 9981202 (-6916)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41250, 10188560 : 10191913 (3353)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41251, 8666104 : 8659731 (-6373)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41252, 10384458 : 10368945 (-15513)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41253, 10264407 : 10282776 (18369)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41254, 10990240 : 10970427 (-19813)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41255, 9132929 : 9148993 (16064)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41256, 9721031 : 9728954 (7923)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41257, 10835619 : 10836245 (626)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41258, 10259612 : 10246455 (-13157)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41259, 9122047 : 9134676 (12629)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41260, 9934268 : 9958016 (23748)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41261, 9256805 : 9258980 (2175)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41262, 10719864 : 10739716 (19852)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41263, 11184219 : 11165684 (-18535)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41264, 10106981 : 10093673 (-13308)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41265, 9958517 : 9981810 (23293)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41266, 10356875 : 10357814 (939)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41267, 10237420 : 10241372 (3952)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41268, 10877842 : 10889787 (11945)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41269, 9893849 : 9897219 (3370)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41270, 9622272 : 9590852 (-31420)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41271, 9766071 : 9778856 (12785)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41272, 10446094 : 10442325 (-3769)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41273, 9119829 : 9123834 (4005)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41274, 10171219 : 10167207 (-4012)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41275, 9073241 : 9083563 (10322)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41276, 11132328 : 11114429 (-17899)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41277, 10499732 : 10478287 (-21445)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41278, 10289079 : 10279613 (-9466)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41279, 9552979 : 9562375 (9396)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41280, 9663933 : 9634068 (-29865)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41281, 10114028 : 10116797 (2769)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41282, 10277735 : 10247411 (-30324)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41283, 9264516 : 9248775 (-15741)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41284, 9041756 : 9042278 (522)
	//1, 4, 10, 23, 57, 142, 361, 925, 2383, 6150, 15891, 41285, 9659852 : 9666124 (6272)

	// I computed all of this sequence so far and I'm thinking of throwing it out.
    // I was thinking about how the 1, 5, 19, 41 sequence is asymptotically a multiplier of e after that and I think it's the same here.
    // This implies the sequence is closer to 4, 13, 37, (then multiply by e consecutively)

	//long long comparisons = IntThatTracksComparisons::get_comparisons();

	//Sorted::verify((current_type*)data.data(), -1, size);
	//Print::print((current_type*)data.data(), -1, size);

	//HeapTests::test_min_heap<current_type>((current_type*)data.data(), -1, size, tuple_size);
	//HeapTests::test_max_heap<current_type>((current_type*)data.data(), -1, size, tuple_size);
	//HeapTests::test_min_heap_alignment<current_type>((current_type*)data.data(), -1, size, tuple_size);
	//HeapTests::test_max_heap_alignment<current_type>((current_type*)data.data(), -1, size, tuple_size);
	
	//std::cout << comparisons << std::endl;
	//float cost_per_element = ((float)comparisons) / size;
	//std::cout << cost_per_element << std::endl;

	char word;
	std::cin >> word;
	return 0;
}